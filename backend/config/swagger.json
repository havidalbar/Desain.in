{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Desainin",
    "description": "Desainin Documentation"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authenticate User"
    },
    {
      "name": "User",
      "description": "User Operation"
    },
    {
      "name": "Contest",
      "description": "Contest Services"
    },
    {
      "name": "Transaction",
      "description": "Transaction Services"
    },
    {
      "name": "Portfolio",
      "description": "Portfolio Services"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "log user into the system",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "login user",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "nabilaelazri@student.ub.ac.id"
                },
                "password": {
                  "type": "string",
                  "example": "kakadamgantengbanget"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized, username or password is incorrect"
          },
          "404": {
            "description": "User is not exist"
          },
          "422": {
            "description": "Validation failed, please check your input"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "register a new user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "register a new user email must be valid and password minimum 8",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "phone_number",
                "nama"
              ],
              "properties": {
                "nama": {
                  "type": "string",
                  "example": "Adam"
                },
                "email": {
                  "type": "string",
                  "example": "graha.asa@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "g@md1234"
                },
                "phone_number": {
                  "type": "string",
                  "example": "0874562157"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "User already exist"
          },
          "422": {
            "description": "Validation failed, please check your input"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/user/profile/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User id for get user profile",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/user/updatePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Change user password",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "Change user password, and password must be valid 8 char long",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "newPassword",
                "oldPassword"
              ],
              "properties": {
                "newPassword": {
                  "type": "string",
                  "example": "password1234"
                },
                "oldPassword": {
                  "type": "string",
                  "example": "password4321"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "body not found/params user id not provided"
          },
          "406": {
            "description": "Password invalid "
          },
          "412": {
            "description": "Password not provided/params user id not provided"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/user/createInvitation/{userInvitedId}": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create invitation for user to become a designer",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userInvitedId",
            "description": "Which user id will be given an invitation",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/user/acceptInvitation": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Accept or reject invitation",
        "description": "Please log in with user who get an invitation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "invitation",
            "description": "Invitation data from designer",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "uuid",
                "confirmation"
              ],
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "448bf2337ecc4886a76826314b0dd718"
                },
                "confirmation": {
                  "type": "string",
                  "example": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Invitation not found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "422": {
            "description": "Validation failed, please check your input"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    },
    "/user/cancelInvitation/": {
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "cancel invitation by authorized designer",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "invitation",
            "description": "Invitation data from database",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "uuid",
                "userInviteId"
              ],
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "448bf2337ecc4886a76826314b0dd718"
                },
                "userInvitedId": {
                  "type": "integer",
                  "example": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Invitation not found"
          },
          "422": {
            "description": "Validation failed, please check your input"
          },
          "500": {
            "description": "Server error, report stack to backend developer"
          }
        }
      }
    }
  }
}